-- Script was generated by Devart dbForge Studio Express for MySQL, Version 6.0.441.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 02/12/2013 21:48:18
-- Server version: 5.5.32
-- Client version: 4.1

-- 
-- Disable foreign keys
-- 
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

-- 
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8';

-- 
-- Set default database
--
USE fet10009689;

--
-- Definition for table crimestatistics
--
DROP TABLE IF EXISTS crimestatistics;
CREATE TABLE crimestatistics (
  Id INT(11) NOT NULL AUTO_INCREMENT,
  Homicide INT(11) DEFAULT NULL,
  ViolenceWithInjury INT(11) DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB
AUTO_INCREMENT = 2
AVG_ROW_LENGTH = 16384
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table geographicreference
--
DROP TABLE IF EXISTS geographicreference;
CREATE TABLE geographicreference (
  Id INT(11) NOT NULL AUTO_INCREMENT,
  Name VARCHAR(50) NOT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB
AUTO_INCREMENT = 5
AVG_ROW_LENGTH = 4096
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table country
--
DROP TABLE IF EXISTS country;
CREATE TABLE country (
  GeographicReference_Id INT(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (GeographicReference_Id),
  UNIQUE INDEX UK_Country_GeographicReference (GeographicReference_Id),
  CONSTRAINT FK_Country_GeographicReference_Id FOREIGN KEY (GeographicReference_Id)
    REFERENCES geographicreference(Id) ON DELETE RESTRICT ON UPDATE RESTRICT
)
ENGINE = INNODB
AVG_ROW_LENGTH = 16384
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table national
--
DROP TABLE IF EXISTS national;
CREATE TABLE national (
  GeographicReference_Id INT(11) NOT NULL AUTO_INCREMENT,
  CrimeStatistics_Id INT(11) DEFAULT NULL,
  PRIMARY KEY (GeographicReference_Id),
  CONSTRAINT FK_National_CrimeStatistics_Id FOREIGN KEY (CrimeStatistics_Id)
    REFERENCES crimestatistics(Id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT FK_National_GeographicReference_Id FOREIGN KEY (GeographicReference_Id)
    REFERENCES geographicreference(Id) ON DELETE RESTRICT ON UPDATE RESTRICT
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table region
--
DROP TABLE IF EXISTS region;
CREATE TABLE region (
  GeographicReference_Id INT(11) NOT NULL DEFAULT 0,
  Country_Id INT(11) DEFAULT NULL,
  PRIMARY KEY (GeographicReference_Id),
  CONSTRAINT FK_Region_Country_GeographicReference_Id FOREIGN KEY (Country_Id)
    REFERENCES country(GeographicReference_Id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT FK_Region_GeographicReference_Id FOREIGN KEY (GeographicReference_Id)
    REFERENCES geographicreference(Id) ON DELETE RESTRICT ON UPDATE RESTRICT
)
ENGINE = INNODB
AVG_ROW_LENGTH = 8192
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table area
--
DROP TABLE IF EXISTS area;
CREATE TABLE area (
  GeographicReference_id INT(11) NOT NULL,
  CrimeStatistics_Id INT(11) DEFAULT NULL,
  Region_Id INT(11) DEFAULT NULL,
  PRIMARY KEY (GeographicReference_id),
  CONSTRAINT FK_Area_CrimeStatistics_Id FOREIGN KEY (CrimeStatistics_Id)
    REFERENCES crimestatistics(Id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT FK_Area_GeographicReference_Id FOREIGN KEY (GeographicReference_id)
    REFERENCES geographicreference(Id) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT FK_area_region_GeographicReference_Id FOREIGN KEY (Region_Id)
    REFERENCES region(GeographicReference_Id) ON DELETE RESTRICT ON UPDATE RESTRICT
)
ENGINE = INNODB
AVG_ROW_LENGTH = 16384
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

DELIMITER $$

--
-- Definition for procedure GetAllCountries
--
DROP PROCEDURE IF EXISTS GetAllCountries$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE GetAllCountries()
BEGIN
  SELECT `gr`.`id`, `gr`.`name` FROM 
    `country` `c`
  INNER JOIN `geographicreference` `gr`
    ON `gr`.`id` = `c`.`GeographicReference_Id`;
  
END
$$

--
-- Definition for procedure GetAllRegions
--
DROP PROCEDURE IF EXISTS GetAllRegions$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE GetAllRegions()
BEGIN
  SELECT `gr`.`id`, `gr`.`name` FROM
    `region` `r`
  INNER JOIN `geographicreference` `gr`
    ON `gr`.`id` = `r`.`GeographicReference_Id`;
END
$$

--
-- Definition for procedure GetAreasForRegion
--
DROP PROCEDURE IF EXISTS GetAreasForRegion$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE GetAreasForRegion(IN RegionId VARCHAR(255))
BEGIN
  SELECT `gr`.`id`, `gr`.`name`, `cs`.`Homicide`, `cs`.`ViolenceWithInjury` FROM
    `area` `a`
  INNER JOIN `geographicreference` `gr`
    ON `gr`.`id` = `a`.`GeographicReference_Id`
  INNER JOIN `crimestatistics` `cs`
    ON `a`.`CrimeStatistics_Id` = `cs`.`id`
  WHERE `a`.`Region_Id` = RegionId;
END
$$

--
-- Definition for procedure GetRegionForCountry
--
DROP PROCEDURE IF EXISTS GetRegionForCountry$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE GetRegionForCountry(IN CountryId INT)
BEGIN
  SELECT `gr`.`id`, `gr`.`name` FROM
    `region` `r`
  INNER JOIN `geographicreference` `gr`
    ON `gr`.`id` = `r`.`GeographicReference_Id`
  WHERE `r`.`Country_Id` = CountryId;
END
$$

DELIMITER ;

-- 
-- Enable foreign keys
-- 
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;